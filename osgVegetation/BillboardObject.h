#pragma once
#include "Common.h"
#include "BillboardLayer.h"
#include <osg/Referenced>
#include <osg/Vec4>
#include <osg/Vec3>
#include <osg/ref_ptr>
#include <vector>
#include <map>

namespace osgVegetation
{
	/**
	Internal class holding single billboard instance generated by the scattering class
	*/
	class BillboardObject : public osg::Referenced
	{
	public:
		BillboardObject():
		  Color(255,255,255,255),
			  Width(1.0f),
			  Height(1.0f),
			  TextureIndex(0) {}

		  BillboardObject(const osg::Vec3& position, const osg::Vec4& color, float width, float height, unsigned int type):
		  Color(color),
			  Width(width),
			  Height(height),
			  TextureIndex(type) {Position = position;}

		  osg::Vec3		  Position;
		  osg::Vec4       Color;
		  float           Width;
		  float           Height;
		  unsigned int    TextureIndex;
	};
	typedef std::vector< osg::ref_ptr<BillboardObject> > BillboardVegetationObjectVector;
}
